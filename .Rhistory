openFileInOS("Rplot3.png")
#그래프 파라미터 설정
plot(faithful)
#제목과 축
plot(faithful,
main="Old Faithful Geyser",
sub="Yellowstone National Park",
xlab="Eruption time(m)",
ylab="Waiting time(m)")
?par
#las :  the style of axis labels.
plot(faithful, las=0)
plot(faithful, las=1)
#las :  the style of axis labels.
plot(faithful, las=0)
plot(faithful, las=1)
plot(faithful, las=2)
plot(faithful, las=0)
plot(faithful, las=2)
plot(faithful, las=3)
#las :  the style of axis labels.
plot(faithful, las=0)
plot(faithful, las=3)
plot(faithful, las=1)
#las :  the style of axis labels.
plot(faithful, las=0)
plot(faithful, las=1)
plot(faithful, las=2)
plot(faithful, las=3)
#las :  the style of axis labels.
plot(faithful, las=0)
plot(faithful, bty="o")
plot(faithful, bty="n")
plot(faithful, bty="l")
plot(faithful, bty="j")
plot(faithful, bty="]")
#심볼과 선
?pch
#심볼과 선
?pch : 심볼
#21~25번은 테두리와 색깔 따로 지정 가능
plot(faithful, pch=3)
plot(faithful, pch=8)
plot(faithful, pch=8, col="green")
plot(faithful, pch=21)
plot(faithful, pch=25)
plot(faithful, pch=25, col="dimgray", bg="purple")
plot(faithful, pch=25, col="red", bg="purple")
?lty
#lty : 선
str(LakeHuron)
plot(LakeHuron)
plot(LakeHuron, lty="dotted")
plot(LakeHuron, lty="dashed")
plot(LakeHuron, lty="dotdash")
#테두리
?par
plot(LakeHuron, lty=8)
#그래프 유형
str(pressure)
plot(pressure)
plot(pressure, type="p")
plot(pressure, type="l")
#테두리
?par
#그래프 유형
?plot
#그래프 유형
?plot
plot(pressure, type="b")
plot(pressure, type="h")
plot(pressure, type="s")
plot(pressure, type="n")
plot(pressure, type="S")
plot(pressure, type="o")
x <- 1:10
y <- exp(1:10)
y1 <- exp(1:10)
y2 <- exp(10:1)
lines(x, y1, type = "o")
lines(x, y1, type = "o", pch=21, col="red")
lines(x, y2, type = "o", pch=22, col="blue")
plot(x,y1, xlab = "x", ylab="y", type="n")
lines(x, y1, type = "o", pch=21, col="red")
lines(x, y2, type = "o", pch=22, col="blue")
plot(faithful)
plot(faithful, type="n")
grid()
points(faithful, pch=19, col="blue")
plot(faithful, pch=19, col="blue")
grid()
#색상
colors()
palette()
palette(rainbow(6))
palette()
palette("default")
palette()
n <- 12
pie(rep(1, n), col=1:n)
pie(rep(1, n), col=rainbow(n))
pie(rep(1, n), col=heat.colors(n))
pie(rep(1, n), col=terrain.colors(n))
pie(rep(1, n), col=gray(level = seq(0,1,length=n)))
seq(0,1,length=12)
seq(0,1,12)
seq(0,1,length=5)
seq(0,1,length=10)
seq(0,1,length=12)
pie(rep(1, n), col=rainbow(n, alpha = seq(0,1,length=n)))
pie(rep(1, n), col=gray(level = seq(0,1,length=n),
alpha = seq(0,1,length=n)))
pie(rep(1, n), col=gray(level = seq(0,1,length=n)))
pie(rep(1, n), col=gray(level = seq(0,1,length=n),
alpha = seq(0,1,length=n)))
library(RColorBrewer)
?RColorBrewer
display.brewer.all()
display.brewer.pal(3, "Dark2")
display.brewer.pal(9, "Dark2")
display.brewer.pal(9, "Blues")
n <- 9
pie(rep(1,n), col=brewer.pal(n, "Greens"))
pie(rep(1,n), col=brewer.pal(n, "GuGn"))
pie(rep(1,n), col=brewer.pal(n, "BuGn"))
plot(faithful,pch=21, col="tomato",
main="Old Faithful Geyser",
sub="Yellowstone National Park",
xlab="Eruption time(m)",
ylab="Waiting time(m)",
col.main="navy", col.sub="purple",col.lab="royalblue",col.axis="brown"
)
#크기
#ces
x <- seq(0.5,1.5,0.25)
y <- rep(1, length(x))
plot(x,y,pch=19, cex=x,
main="Effects of cex on symbol and text size")
plot(x,y,pch=19, cex=x,col="yello"
main="Effects of cex on symbol and text size")
plot(x,y,pch=19, cex=x,col="yello",
main="Effects of cex on symbol and text size")
plot(x,y,pch=19, cex=x,col="yellow",
main="Effects of cex on symbol and text size")
plot(x,y,pch=19, cex=x,col="green",
main="Effects of cex on symbol and text size")
text(x,y+0.2, labels = x, cex=x)
text(x,y+0.1, labels = x, cex=x)
plot(x,y,pch=19, cex=x,col="green",
main="Effects of cex on symbol and text size",
cex.main=1.5, cex.lab=1.0, cex.axis=0.75)
plot(LakeHuron, lwd=1)
plot(LakeHuron, lwd=3)
#글꼴, 글씨체
windowsFonts()
plot(faithful,pch=21, col="tomato",
main="Old Faithful Geyser",
sub="Yellowstone National Park",
xlab="Eruption time(m)",
ylab="Waiting time(m)",
family="sans")
#기존 글꼴 변경하기
windowsFonts(
A=windowsFont("Arial Black"),
B=windowsFont("Book Antiqua"),
C=windowsFont("Clisto MT")
)
plot(faithful,pch=21, col="tomato",
main="Old Faithful Geyser",
sub="Yellowstone National Park",
xlab="Eruption time(m)",
ylab="Waiting time(m)",
family="C")
?par
plot(faithful,pch=21, col="cornflowerblue",
main="Old Faithful Geyser",
sub="Yellowstone National Park",
xlab="Eruption time(m)",
ylab="Waiting time(m)",
family="serif", font.main=4, font.sub=1, font.lab=3, font.axis=2)
#그래프 배치
windows()
windows(width = 12, height = 8)
plot(faithful,pch=21, col="cornflowerblue",
main="Old Faithful Geyser",
sub="Yellowstone National Park",
xlab="Eruption time(m)",
ylab="Waiting time(m)",
family="serif", font.main=4, font.sub=1, font.lab=3, font.axis=2)
par("mai")
par(mai=c(1,0.5,1,0.2))
par("mar")
#margin
par("mai")
#margin
par("mai")
par("mar")
#margin
par("mai")
par("mar")
old.par <- par(mai=c(1,0.5,1,0.2))
par("mai")
par(old.par)
par("mai")
old.par <- par(mai=c(5,4,4,2)+0.2)
par("mar")
par(old.par)
par("mar")
x1 <- 1:10
y1 <- log(x1)
x2 <- 1:10
y2 <- sqrt(x2)
plot(x1,y2,type = "l", col="red", xlab="X",ylab="Y")
lines(x2, y2, lty="dashed", col="blue")
range(y1)
range(y2)
xlim <- range(c(x1, x2))
ylim <- range(c(y1, y2))
plot(x1, y1, xlim=xlim, ylim=ylim,
type = "l", col="red", xlab="X",ylab="Y")
lines(x2, y2, lty="dashed", col="blue")
par("mfrow")
old.par <- par(mfrow=c(2,2))
par("mfrow")
plot(faithful, pch=19, col="blue", main="First:Old Faithful")
plot(pressure, type="l", col="red", main="Second")
plot(LakeHuron,  col="green", lwd=2, main="Third")
plot(ToothGrowth$supp, ToothGrowth$len, col="orange", main="Fourth")
#열 기준으로 그래프 넣으려면
old.par <- par(mfrow=c(2,2))
par("mfcol")
plot(faithful, pch=19, col="blue", main="First:Old Faithful")
plot(pressure, type="l", col="red", main="Second")
plot(LakeHuron,  col="green", lwd=2, main="Third")
plot(ToothGrowth$supp, ToothGrowth$len, col="orange", main="Fourth")
#열 기준으로 그래프 넣으려면
old.par <- par(mfcol=c(2,2))
par("mfcol")
plot(faithful, pch=19, col="blue", main="First:Old Faithful")
plot(pressure, type="l", col="red", main="Second")
plot(LakeHuron,  col="green", lwd=2, main="Third")
plot(ToothGrowth$supp, ToothGrowth$len, col="orange", main="Fourth")
#그래프 넣는 순서 지정할 수 있음, 행렬형태로 설정
matrix(c(1,1,4,2,3,4), 2,3,byrow = TRUE)
layout(matrix(c(1,1,4,2,3,4), 2,3,byrow = TRUE))
layout.show(4)
plot(faithful, pch=19, col="blue", main="First:Old Faithful")
plot(pressure, type="l", col="red", main="Second")
plot(LakeHuron,  col="green", lwd=2, main="Third")
plot(ToothGrowth$supp, ToothGrowth$len, col="orange", main="Fourth")
par(old.par)
#행의 높이와 열의 폭 설정
old.par <- par(no.readonly = TRUE) #기존의 설정 저장
layout(matrix(c(1,1,4,2,3,4), 2,3,byrow = TRUE),
widths = c(1,1,1.5), height=c(2,1))
plot(faithful, pch=19, col="blue", main="First:Old Faithful")
plot(pressure, type="l", col="red", main="Second")
plot(LakeHuron,  col="green", lwd=2, main="Third")
plot(ToothGrowth$supp, ToothGrowth$len, col="orange", main="Fourth")
par(old.par)
?par
#그래프 요소 추가
plot(faithful,
main="Old Faithful Geyser",
sub="Yellowstone National Park",
xlab="Eruption time(m)",
ylab="Waiting time(m)",
xlim=c(1,6), ylim=c(40,100),
las=1, bty="l", pch=21, col="dimgray", bg="maroon",
family="serif",
font.main=4, font.sub=3, font.axis=2,
cex.main=1.5, cex.lab=1.0, cex.axis=0.75,
col.main="tomato", col.sub="orange",
col.lab="firebrick", col.axis="khaki4")
par(old.par)
par("mfcol")
par("mfcol") <- c(1,1)
par(mfcol=c(1,1))
par()
#그래프 요소 추가
plot(faithful,
main="Old Faithful Geyser",
sub="Yellowstone National Park",
xlab="Eruption time(m)",
ylab="Waiting time(m)",
xlim=c(1,6), ylim=c(40,100),
las=1, bty="l", pch=21, col="dimgray", bg="maroon",
family="serif",
font.main=4, font.sub=3, font.axis=2,
cex.main=1.5, cex.lab=1.0, cex.axis=0.75,
col.main="tomato", col.sub="orange",
col.lab="firebrick", col.axis="khaki4")
#제목과 축
?title
?par
#고수준 함수에서 제목과 축을 설정할 수 있는데, 저수준함수에서 하려면 일단 고수준함수 선언할 때
#ann 옵션에 FALSE로 선언
?axis
str(state.x77)
states <- data.frame(state.x77)
attach(states)
old.par <- par(no.readonly = TRUE) #기존의 설정 저장
par(mar=c(5,4,4,8)+0.2)
plot(Murder, Life.Exp, pch=20, col="tomato", ylim=c(35, 75),
yaxt="n",col.axis="darkorchid4",
cex.axis=0.75, ann=FALSE)
points(Murder, HS.Grad, pch=22, col="blue", bg="skyblue")
axis(side=2, at=seq(68,76,2), labels = seq(68,76,2),
col.axis="red",cex.asix=0.75, las=2)
axis(side = 4, at=seq(35,70,5), labels = seq(35,70,5),
col.axis="blue",cex.asix=0.75, las=2, tck=-0.02)
mtext(text = "High School \nGraduates\n(percent)",
side = 4, line = 3, cex = 0.9, las=2, col = "tan4")
axis(side=2, at=seq(68,76,2), labels = seq(68,76,2),
col.axis="red",cex.asix=0.75, las=2)
str(state.x77)
states <- data.frame(state.x77)
attach(states)
old.par <- par(no.readonly = TRUE) #기존의 설정 저장
par()
par(mar=c(5,4,4,8)+0.2)
plot(Murder, Life.Exp, pch=20, col="tomato", ylim=c(35, 75),
yaxt="n",col.axis="darkorchid4",
cex.axis=0.75, ann=FALSE)
points(Murder, HS.Grad, pch=22, col="blue", bg="skyblue")
axis(side=2, at=seq(68,76,2), labels = seq(68,76,2),
col.axis="red",cex.asix=0.75, las=2)
axis(side=2, at=seq(68,76,2), labels = seq(68,76,2),
col.axis="red",cex.axis=0.75, las=2)
plot(Murder, Life.Exp, pch=20, col="tomato", ylim=c(35, 75),
yaxt="n",col.axis="darkorchid4",
cex.axis=0.75, ann=FALSE)
points(Murder, HS.Grad, pch=22, col="blue", bg="skyblue")
axis(side=2, at=seq(68,76,2), labels = seq(68,76,2),
col.axis="red",cex.axis=0.75, las=2)
axis(side = 4, at=seq(35,70,5), labels = seq(35,70,5),
col.axis="blue",cex.axis=0.75, las=2, tck=-0.02)
mtext(text = "High School \nGraduates\n(percent)",
side = 4, line = 3, cex = 0.9, las=2, col = "tan4")
title(main="Murder vs. Life Expectancy vs. High School Graduates",
xlab="Murder(rate per 100,000 population)",
ylab="Life Expectancy(years)",
col.main="maroon", col.lab="tan4", cex.lab=0.9)
par(old.par)
detach(states)
plot(Murder, Life.Exp, pch=20, col="tomato", ylim=c(35, 75),
yaxt="n",col.axis="darkorchid4",
cex.axis=0.75, ann=FALSE)
#범례
?legend
str(Orange)
tree1 <- subset(Orange, Tree==1)
tree2 <- subset(Orange, Tree==2)
xlim <- range(c(tree1$age, tree2$age))
ylim <- range(c(tree1$circumference, tree2$circumference))
plot(tree1$age, tree1$circumference, type="b",
xlim=xlim, ylim=ylim,
pch=16, lty=1, col="red",
main="Growth of Orange Tree",
xlab="Age(days)", ylab="Circumference(mm)")
lines(tree2$age, tree2$circumference, type = "b",
pch=15, lty=2, col="blue")
#범례추가
legend("topleft", inset = 0.05, title="Tree ID",
legend = c("Tree 1", "Tree 2"),
lty = c(1,2),
pch=c(16,15),
col=c("red", "blue"))
library(Hmisc)
#그래프 요소 추가 보조눈금
install.packages("Hmisc")
#그래프 요소 추가 보조눈금
#install.packages("Hmisc")
library(Hmisc)
minor.tick(nx=3, ny=3, tick.ratio = 0.5)#눈금 사이 지정, tick.ratio=0.5 주 눈금의 50프로
#텍스트
?text
plot(1:5, 1:5, type="n", xaxt="n", yaxt="n",ann=FALSE) #출력 다 안해해
text(2,2, font=1, col="red", cex=1.0)
text(2,2, font=1, col="red", cex=1.0,
labels="Default text:Sans text with plain(font=1")
text(2,2, font=1, col="red", cex=1.0,
labels="Default text:Sans text with plain(font=1)")
plot(1:5, 1:5, type="n", xaxt="n", yaxt="n",ann=FALSE) #출력 다 안해해
text(2,2, font=1, col="red", cex=1.0,
labels="Default text:Sans text with plain(font=1)")
text(3,3, font=2, col="darkgreen", cex=1.2, family="mono",
labels="Mono text with bold(font=2)")
text(4,4, font=3, col="blue", cex=1.4, family="serif",
labels="Serif text with italic(font=3)")
text(2,4, font=2, col="blue", cex=1.4, family="HersheScript",
labels="HersheScript text (srt=25)", srt=25)
text(2,4, font=2, col="blue", cex=1.4, family="HersheyScript",
labels="HersheScript text (srt=25)", srt=25)
plot(1:5, 1:5, type="n", xaxt="n", yaxt="n",ann=FALSE) #출력 다 안해해
text(2,2, font=1, col="red", cex=1.0,
labels="Default text:Sans text with plain(font=1)")
text(3,3, font=2, col="darkgreen", cex=1.2, family="mono",
labels="Mono text with bold(font=2)")
text(4,4, font=3, col="blue", cex=1.4, family="serif",
labels="Serif text with italic(font=3)")
text(2,4, font=2, col="blue", cex=1.4, family="HersheyScript",
labels="HersheScript text (srt=25)", srt=25)
mtext(text="Windows Fonts:Sans, Mono, Serif, and HersheyScript",
side=1, line=1, col="deeppink")
str(mtcars)
attach(mtcars)
plot(wt, mpg, pch=19, col="royalblue",
main="Car Mileage vs. Car Weight",
xlab="Weight(1,1000lbs)", ylab = "Mileage(Miles per Gallon")
plot(wt, mpg, pch=19, col="royalblue",
main="Car Mileage vs. Car Weight",
xlab="Weight(1,1000lbs)", ylab = "Mileage(Miles per Gallon)")
text(wt, mpg, row.names(mtcars), cex = 0.6, pos=4, col="maroon")
detach(mtcars)
#week14. 그래프
#원도표
slice <- c(325,285,706,885)
lbl <- c("1st Class", "2nd Class", "3rd Class", "Crew")
pie(slice, labels = lbl, main = "Pie Chart of Titanic Passengers")
str(Titanic)
#
Class <- margin.table(Titanic, margin=1)#새로운 요약 테이블 생성해줌
Class
pie(Class, main = "Pie Chart of Titanic Passengers")
lbl <- paste(names(class), ":", class, sep="")
names(class)
#
class <- margin.table(Titanic, margin=1)#새로운 요약 테이블 생성해줌
class
pie(class, main = "Pie Chart of Titanic Passengers")#labels 지정하지 않아 레이블 이름 가져옴
lbl <- paste(names(class), ":", class, sep="")
lbl
pie(class, labels = lbl, main = "Pie Chart of Titanic Passengers"))
pie(class, labels = lbl, main = "Pie Chart of Titanic Passengers")
class.pct <- round(class/sum(class)*100, 1)#percent 보여줌줌
lbl <- paste(names(class), ":", class.pct,"%", sep="")
pie(class, labels = lbl, main = "Pie Chart of Titanic Passengers")
#color change
pie(class, labels = lbl, col=rainbow(lengh(class.pct)),
main = "Pie Chart of Titanic Passengers")
#color change
pie(class, labels = lbl, col=rainbow(length(class.pct)),
main = "Pie Chart of Titanic Passengers")
#부채도표
install.packages("plotrix")
#부채도표
#install.packages("plotrix")
library(plotrix)
fan.plot(class, labels = names(class),
main="Pie Chart of Titanic Passengers")
#막대도표
str(Titanic)
class <- margin.table(Titanic, margin = 1) #첫번째 차원 선택
class
barplot(class, main="Simple Bar chart")
barplot(class,
xlab="Class",
ylab="Number of Passengers",
main="Simple Bar chart")
#수평형
barplot(class, horiz = TRUE,
xlab="Class",
ylab="Number of Passengers",
main="Simple Bar chart") #기본으로 수직
#수평형
barplot(class, horiz = TRUE,
xlab="Class",
ylab="Number of Passengers",
main="Horizeontal Bar chart")
#수직누적막대도표
survival.by.class <- margin.table(Titanic, margin=c(4,1))
survival.by.class
barplot(survival.by.class,
main="Stacked Bar Chart")
#수평누적막대도표
barplot(survival.by.class, beside = TRUE,
main="Stacked Bar Chart")
barplot(survival.by.class, beside = TRUE,
names.arg = c("1st Class", "2nd Class", "3rd Class", "Crew"),
main="Grouped Bar Chart")
barplot(survival.by.class, beside = TRUE,
names.arg = c("1st Class", "2nd Class", "3rd Class", "Crew"),
cex.names = 0.75,#크기
main="Grouped Bar Chart")
barplot(survival.by.class, beside = TRUE,
names.arg = c("1st Class", "2nd Class", "3rd Class", "Crew"),
cex.names = 0.75,#크기
col = c("red", "green"),#색깔
legend=TRUE,
ylab = "Survivors", las=1, ylim=c(0,1000),
main="Grouped Bar Chart")
#범례위치 바꾸기
barplot(survival.by.class, beside = TRUE,
names.arg = c("1st Class", "2nd Class", "3rd Class", "Crew"),
cex.names = 0.75,#크기
col = c("red", "green"),#색깔
ylab = "Survivors", las=1, ylim=c(0,1000),
main="Grouped Bar Chart")
legend(x=1,y=900)
legend(x=1,y=900, legend = c("Dead", "Alive"))
legend(x=1,y=900, legend = c("Dead", "Alive"),
#pch= ,모양인경우
#lty = ,선 인 경우
fill = c("red", "green"), title = "Status")
#막대의 높이를 동일하게 만들고 척도 비교하기
survival.by.class
survival.prop <- prop.table(survival.by.class, margin=2) #열의 비율을 계산해서 margin=2
survival.prop
barplot(survival.prop, col=c("maroon", "skyblue"),
xlab="Class", ylab="Ratio of Survivors", las=1,
main="Survivors by Class(Ratio")
