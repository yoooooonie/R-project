week3-3

> num <- 0:30
> num
 [1]  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
> prime <- c(2,3,5,7,13,17,19)
> prime[3]
[1] 5
> prime[1:3]
[1] 2 3 5
> prime[4:6]
[1]  7 13 17
> prime[6:3]
[1] 17 13  7  5
> prime[c(1,1,4,6)]
[1]  2  2  7 17
> prime[c(1,3,5,7)]
[1]  2  5 13 19
> prime[c(7,5,3,1)]
[1] 19 13  5  2
> indices <- c(1,3,5,7)
> prime[indices]
[1]  2  5 13 19
> #마이너스가 붙은 인덱스틑 없애달라는 뜻
> prime[1]
[1] 2
> prime[-1]
[1]  3  5  7 13 17 19
> prime2 <- prime[-2]
> prime2
[1]  2  5  7 13 17 19
> length(prime)
[1] 7
> 1:(length(prime)-1)
[1] 1 2 3 4 5 6
> prime[1:(length(prime)-1)]
[1]  2  3  5  7 13 17
> #인덱스를 이용해서 그 위치에 숫자 넣기
> prime <- c(2,4,5,7,11,14,17,18)
> prime
[1]  2  4  5  7 11 14 17 18
> prime[2] <- 3
> prime
[1]  2  3  5  7 11 14 17 18
> prime[c(6,8)] <- c(13,19)
> prime
[1]  2  3  5  7 11 13 17 19
> #인덱스를 지정해서 숫자들을 넣을 수 있다
> prime <- c(2,3,5,7,11,13,17,19)
> prime
[1]  2  3  5  7 11 13 17 19
> length(prime)
[1] 8
> #없는인덱스도 R이 만들어서 넣어준다
> prime[9] <- 23
> prime
[1]  2  3  5  7 11 13 17 19 23
> prime[c(10,11)] <- c(29,31)
> prime
 [1]  2  3  5  7 11 13 17 19 23 29 31
> #아예 순서대로 아닌 건넌 인덱스에도 막 넣어둘 수 있다. 중간에 빈 인덱스는 NA로 채움
> prime[15] <- 47
> prime
 [1]  2  3  5  7 11 13 17 19 23 29 31 NA NA NA 47
> #논리연산으로 하는 법
> prime <- c(2,3,5,7,11,13,17,19)
> prime < 10
[1]  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE
> prime[prime < 10]
[1] 2 3 5 7
> prime %% 2 == 0
[1]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
> prime[prime %% 2 == 0] #True인 인덱스의 값만 출력력
[1] 2
> #예시 문제
> seq_along(prime) #length 만큼의 정수를 시퀀셜하게 출력함
[1] 1 2 3 4 5 6 7 8
> seq_along(prime) %% 2 == 0
[1] FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE
> prime[seq_along(prime) %% 2 == 0]
[1]  3  7 13 19
> prime[seq_along(prime) %% 3 == 0]
[1]  5 13
> prime[c(FALSE, TRUE)]
[1]  3  7 13 19
> prime[c(FALSE,FALSE, TRUE)] #매 3번째가 출력됨
[1]  5 13
> rainfall <- c(21.6,23.6,45.8,77.0,102.2,133.3,327.9,348.0,137.6,49.3,53.0,24.9)
> length(rainfall)
[1] 12
> #강수량이 100보다 큰 달
> rainfall>100
 [1] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
> #강수량이 100보다 큰 달 index
> which(rainfall>100) 
[1] 5 6 7 8 9
> month.name  
 [1] "January"   "February"  "March"     "April"     "May"       "June"      "July"      "August"   
 [9] "September" "October"   "November"  "December" 
> #강수량이 100보다 큰 달 name
> month.name[which(rainfall>100)]
[1] "May"       "June"      "July"      "August"    "September"
> month.abb[which(rainfall>100)]
[1] "May" "Jun" "Jul" "Aug" "Sep"
> which.max(rainfall)
[1] 8
> month.name[which.max(rainfall)]
[1] "August"
> which.min(rainfall)
[1] 1
> month.name[which.min(rainfall)]
[1] "January"
> rainfall>100
 [1] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
> rainfall[rainfall>100]
[1] 102.2 133.3 327.9 348.0 137.6
> max(rainfall)
[1] 348
> min(rainfall)
[1] 21.6
> rainfall[which.min(rainfall)]
[1] 21.6
> #벡터의 각각 값에 이름을 지정할 수 있다
> traffic.death <- c(842,729,786,751,844,851,702)
> traffic.death
[1] 842 729 786 751 844 851 702
> names(traffic.death) <- c("MON","TUE","WED","THU","FRI","SAT","SUN")
> traffic.death
MON TUE WED THU FRI SAT SUN 
842 729 786 751 844 851 702 
> #이름이 지정되면 이름을 주면 인덱스 번호 대신 사용 가능
> traffic.death["SAT"]
SAT 
851 
> traffic.death[c("TUE","FRI","SUN","MON")]
TUE FRI SUN MON 
729 844 702 842 
> weekend <- c("MON","TUE","WED")
> traffic.death[weekend]
MON TUE WED 
842 729 786 
> #사망자수가 800명이 넘는 요일 출력하기
> traffic.death>800
  MON   TUE   WED   THU   FRI   SAT   SUN 
 TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE 
> month.name(which(traffic.death>800))
Error in month.name(which(traffic.death > 800)) : 
  could not find function "month.name"
> month.name[which(traffic.death>800)]
[1] "January" "May"     "June"   
> names(traffic.death>800)
[1] "MON" "TUE" "WED" "THU" "FRI" "SAT" "SUN"
> names(traffic.death(traffic.death>800))
Error in traffic.death(traffic.death > 800) : 
  could not find function "traffic.death"
> names(traffic.death[traffic.death>800])
[1] "MON" "FRI" "SAT"